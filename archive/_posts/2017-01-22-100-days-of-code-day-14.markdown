---
layout: post
title: "#100DaysofCode - Day 14"
date: January 22, 2017
pageClass: post
---

Current Project: [wordapi.net](https://github.com/lyndseybrowning/wordapi.net).

Today I learned a little bit about [Supertest](https://github.com/visionmedia/supertest) and [Mocha](http://mochajs.org/).

I needed a test framework for testing my API. Supertest seemed like a good place to start. The documentation is easy to follow and it can be used with any other test framework. I chose Mocha as it came recommended by a friend.

To start, I installed both packages as dev dependencies and created a ```test/``` directory in the root of my project. This is where all of my tests will go.

I then updated my ```package.json``` file to create a script that would run the tests:

```
"scripts": {
  "lint": "eslint src",
  "test": "NODE_ENV=test npm run lint && mocha"
},
"devDependencies": {
  "babel-cli": "^6.18.0",
  "babel-core": "^6.21.0",
  "babel-preset-es2015": "^6.18.0",
  "chai": "^3.5.0",
  "eslint": "^3.13.1",
  "mocha": "^3.2.0",
  "nodemon": "^1.11.0",
  "supertest": "^2.0.1"
},
```

I abstracted ESLint into its own script so that it could be run without running tests, if required.

The next thing I did was create a ```routes.js``` file in my ```tests/``` directory, imported supertest and created an instance of the express server:

```javascript
import request from 'supertest';
import server from '../src/server.js';

const app = server.init();
```

**note** I had to update the ```server.js``` file to return the instance of ```app``` so that it could be used in my tests:

```javascript
const server = {
  init() {
    app.server = http.createServer(app);
    app.use('/', express.static(`${__dirname}/public`));
    app.use(errorHandler);
    app.use(expressValidator({ customValidators }));
    app.set('json spaces', 2);
    app.server.listen(port);
    routes.init(app);

    // return instance of app here
    return app;
  },
};
```

I run ```npm test``` and received an error regarding the ```import``` statement. Seems like Mocha only understands ES5 and I needed to update the test script to enforce the use of babel. I did so like this:

```
"scripts": {
  "lint": "eslint src",
  "test": "NODE_ENV=test npm run lint && mocha --compilers js:babel-core/register"
}
```

The test still didn't work! I found out eventually that my project was [missing](http://stackoverflow.com/questions/35040978/babel-unexpected-token-import-when-running-mocha-tests) a ```.babelrc``` file which tells the project which babel presets to use. I'd already had babel installed as my API was using ES6, so all I needed to do was create the file with the es2015 preset, like so:

```json
{
  "presets": ["es2015"]
}
```

For more information about Babel, please visit this link: [babeljs.io](https://babeljs.io/).

The next time I run the test, there was no error message, phew!

```
0 passing (2ms)
```

Now it was time to create the tests!

I began by creating a simple test that would expect the route requested to return json.

```javascript
describe('GET /api/valid/:word', () => {
  it('responds with json', (done) => {
    request(app)
      .get('/api/valid/word')
      .expect('Content-Type', /json/)
      .expect(200, done);
  });
});
```

I run the test again and received a success message, yay!

```
GET /api/valid/:word
    âœ“ responds with json


  1 passing (42ms)
```

Understanding how test frameworks work together and the arity of options feels like it's going to be a big learning curve, but one I'm excited to get stuck into.

Tomorrow, I'll continue learning and adding more tests.

Here are some useful links:

- [Supertest](https://github.com/visionmedia/supertest)
- [Mocha](http://mochajs.org/)
- [Babel](https://babeljs.io/)
- [How to build and test your REST API with NodeJs, Express and Mocha](https://thewayofcode.wordpress.com/tag/supertest/)

Thanks for reading! Please ask questions or leave comments in the box below, and if you'd like to follow the project, please click on this link: [https://github.com/lyndseybrowning/wordapi.net](https://github.com/lyndseybrowning/wordapi.net).
